Create a new local repository & setting an upstream tracking branch
	git init
	git remote add origin URL
		[make one commit so HEAD will point to master]
	git push -u origin master

****************COMMANDS***********************
git reflog
	Show all SHA checksums of every commit
	Reflog is a mechanism to record when the tip of branches are updated. This command is to manage the information recorded in it.
	http://gitready.com/intermediate/2009/02/09/reflog-your-safety-net.html
	
git reset
	tutorials on reset
		https://git-scm.com/book/en/v2/Git-Tools-Reset-Demystified
	git reset --soft HEAD~
		When you reset back to HEAD~ (the parent of HEAD), you are moving the branch back to where it was, without changing the Index or Working Directory.

git clean
	Cleans the workspace
	-i interactive
	-n dry run
	-f force 
	
git alias	
	 git config --global alias.last 'log -1 HEAD'
	 
	 https://git-scm.com/book/en/v2/Git-Basics-Git-Aliases
	 
gitk
	visual representation of the repository / commits / branches

****************KEYWORDS***********************
The HEAD
	HEAD is the pointer to the current branch reference, which is in turn a pointer to the last commit made on that branch. That means HEAD will be the parent of the next commit that is created. Itâ€™s generally simplest to think of HEAD as the snapshot of your last commit.
	HEAD~ - The perent of HEAD
	HEAD^ - 

********************SOURCES********************
	http://ndpsoftware.com/git-cheatsheet.html	
		Excellent visual representation of Stash/Workspace/Index/Local repository/Upstream repository and how commands move content between stages

	https://git-scm.com/book/en/v2
		Comprehensive Guide for Git

	http://marklodato.github.io/visual-git-guide/index-en.html#basic-usage
		This page gives brief, visual reference for the most common commands in git. Once you know a bit about how git works, this site may solidify your understanding

	http://onlywei.github.io/explain-git-with-d3/#commit
		Visual and animated tool to understand concepts

	Small GIT cards to memorize stuff
		http://tednaleid.github.io/understanding-git/
		
